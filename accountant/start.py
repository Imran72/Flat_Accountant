from accountant.relational import is_number, insert_query, get_users, get_common_info, get_private_info
import telebot
from .Mode import Mode

token = "1379702508:AAGquXO8II-Uzky60_YHzR7Ni6yddMQOZhg"
bot = telebot.TeleBot(token=token)
moder = Mode()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—á–∞–ª–∞ –æ–±—â–µ–Ω–∏—è
@bot.message_handler(commands=['start'])
def start_cmd(message):
    name = message.chat.first_name
    keybd = telebot.types.ReplyKeyboardMarkup(True)
    btn3 = telebot.types.KeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å Moneyü§ëÔ∏è')
    btn1 = telebot.types.KeyboardButton(text='–£–∑–Ω–∞—Ç—å –æ–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ‚öñÔ∏è')
    btn2 = telebot.types.KeyboardButton(text='–£–∑–Ω–∞—Ç—å —á–∞—Å—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µü§∑‚Äç')
    keybd.add(btn3)
    keybd.add(btn1)
    keybd.add(btn2)
    text = '–ü—Ä–∏–≤–µ—Ç, {}! \n \n'.format(name)
    text += "–Ø —Ö—Ä–∞–Ω—é –¥–∞–Ω–Ω—ã–µ –ø–æ –≤–∞—à–µ–π –∫–≤–∞—Ä—Ç–∏—Ä–µüíµ \n" \
            "–û—Ç–ø—Ä–∞–≤—å —Å—É–º–º—É –¥–µ–Ω–µ–≥, –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—É—é —Ç–æ–±–æ—é –Ω–∞ –æ–±—â–µ–µ –¥–µ–ª–æ,–∏ —è –¥–æ–±–∞–≤–ª—é –∏—Ö –≤ –±–∞–∑—Éüè¶ \n" \
            "–ü–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ 7 –¥–Ω–µ–π –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–∞—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ - –∫–∞–∂–¥—ã–π —É–∑–Ω–∞–µ—Ç, —Å–∫–æ–ª—å–∫–æ –¥–æ–ª–∂–µ–Ωüò±"
    bot.send_message(message.chat.id, text, reply_markup=keybd)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ 0-–ø–æ–ª–æ–∂–µ–Ω–∏—è
@bot.message_handler(content_types=['text'], func=lambda message: moder.mode == Mode.States.INITIAL_STATE)
def send_text(message):
    chat_id = message.chat.id
    text = message.text
    if text == '–£–∑–Ω–∞—Ç—å –æ–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ‚öñÔ∏è':
        mail = get_common_info()
        bot.send_message(chat_id, mail, parse_mode='Markdown')
    elif text == '–£–∑–Ω–∞—Ç—å —á–∞—Å—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µü§∑‚Äç':
        mail = "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:\n\n" + get_users()
        bot.send_message(chat_id, mail)
        moder.mode = Mode.States.PRIVATE_INFO
    elif text == '–î–æ–±–∞–≤–∏—Ç—å Moneyü§ëÔ∏è':
        mail = "–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤—ã–±–æ—Ä! –í–≤–æ–¥–∏—Ç–µ —Å—É–º–º—Éü§ñ"
        moder.mode = Mode.States.RECORDING_STATE
        bot.send_message(chat_id, mail)
    else:
        mail = '–î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º, –º–æ–π –¥—Ä—É–≥)'
        bot.send_message(chat_id, mail)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏–ª–∏, –∏–Ω–∞—á–µ –≥–æ–≤–æ—Ä—è, 1-—Å–æ—Å—Ç–æ—è–Ω–∏—è
@bot.message_handler(content_types=['text'], func=lambda message: moder.mode == Mode.States.RECORDING_STATE)
def send_text(message):
    chat_id = message.chat.id
    text = message.text
    if is_number(text):
        try:
            text = str(text).replace(',', '.')
            insert_query(message, text)
            mail = '–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–Ω–µ—Å–µ–Ω—ã –≤ –±–∞–∑—É! –°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–¥–µ–π—Å—Ç–≤–∏–µ'
            bot.send_message(chat_id, mail)
        except Exception as e:
            mail = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –£–±–µ–¥–∏—Ç–µ–ª—å, —á—Ç–æ –≤—ã –≤–≤–µ–ª–∏ –≤–∞–ª–∏–¥–Ω–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ'
            bot.send_message(chat_id, mail)
        moder.mode = Mode.States.INITIAL_STATE
    elif text == '–£–∑–Ω–∞—Ç—å –æ–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ‚öñÔ∏è':
        mail = get_common_info()
        bot.send_message(chat_id, mail, parse_mode='Markdown')
        moder.mode = Mode.States.INITIAL_STATE
    elif text == '–£–∑–Ω–∞—Ç—å —á–∞—Å—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µü§∑‚Äç':
        mail = "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:\n\n" + get_users()
        bot.send_message(chat_id, mail)
        moder.mode = Mode.States.PRIVATE_INFO
    else:
        mail = '–ù—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Å–µ–≥–æ–¥–Ω—è –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏!'
        bot.send_message(chat_id, mail)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —á–∞—Å—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏, –∏–Ω–∞—á–µ –≥–æ–≤–æ—Ä—è, 2-—Å–æ—Å—Ç–æ—è–Ω–∏—è
@bot.message_handler(content_types=['text'], func=lambda message: moder.mode == Mode.States.PRIVATE_INFO)
def send_user_info(message):
    chat_id = message.chat.id
    text = str(message.text)
    if text == '–£–∑–Ω–∞—Ç—å —á–∞—Å—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µü§∑‚Äç':
        mail = "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:\n\n" + get_users()
        bot.send_message(chat_id, mail)
        moder.mode = Mode.States.PRIVATE_INFO
    elif text.isdigit():
        number = int(text)
        members = len(get_users().split('\n'))
        if number < 1 or number > members - 1:
            mail = "–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º!"
            bot.send_message(chat_id, mail)
        else:
            mail = get_private_info(number)
            bot.send_message(chat_id, mail, parse_mode='Markdown')
            moder.mode = Mode.States.INITIAL_STATE
    elif text == '–£–∑–Ω–∞—Ç—å –æ–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ‚öñÔ∏è':
        mail = get_common_info()
        bot.send_message(chat_id, mail, parse_mode='Markdown')
        moder.mode = Mode.States.INITIAL_STATE
    else:
        mail = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–¥ —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ—Ç! –ü–æ–ø—ã—Ç–∞–π—Ç–µ—Å—å –µ—â–µ —Ä–∞–∑–æ–∫ü§´"
        bot.send_message(chat_id, mail)


'''
# –µ–∂–µ–¥–Ω–µ–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–ø–∏—Å—å
def job():
  conn = sqliteConnector()
  conn.check_days_of_life()


schedule.every().day.at("10:30").do(job)


def go():
  while True:
      schedule.run_pending()
      time.sleep(1)


t = threading.Thread(target=go, name="—Ç–µ—Å—Ç")
t.start()
'''

bot.polling()
